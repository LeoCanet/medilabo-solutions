# =============================================================================
# Configuration de test - Patient Service
# =============================================================================
#
# Cette configuration utilise H2 in-memory et désactive la sécurité Spring
# pour se concentrer sur la logique métier et la validation 3NF.
#
# Architecture de test :
# - Base de données : H2 in-memory (isolation complète, pas de MySQL externe)
# - Sécurité : Désactivée (tests d'intégration métier uniquement)
# - Normalisation : Tests de conformité 3NF selon exigences OpenClassrooms
#
# En production, le service utilise MySQL externe + Basic Auth via Docker.
# =============================================================================

# Base de données H2 in-memory
# Configuration pour similer MySQL en mode test avec isolation complète
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Configuration JPA/Hibernate pour H2
# Utilise le dialecte H2 avec création automatique des tables pour les tests
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Désactive l'exécution des scripts SQL de production (schema.sql)
spring.sql.init.mode=never

# Console H2 désactivée pour les tests automatisés
spring.h2.console.enabled=false

# Désactivation de la sécurité Spring pour les tests
# La sécurité en production est gérée via SecurityConfig avec AUTH_USERNAME/AUTH_PASSWORD
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Configuration des logs pour les tests
logging.level.com.mediscreen=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql=WARN